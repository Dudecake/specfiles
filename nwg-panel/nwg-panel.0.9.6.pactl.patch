diff --git a/nwg_panel/langs/en_US.json b/nwg_panel/langs/en_US.json
index 035c0a1..27a2a90 100644
--- a/nwg_panel/langs/en_US.json
+++ b/nwg_panel/langs/en_US.json
@@ -238,7 +238,7 @@
   "vertical-window-margin": "Vertical window margin",
   "visibility": "Visibility",
   "volume": "Volume",
-  "volume-tooltip": "Depends on the `pamixer` package.",
+  "volume-tooltip": "Requires `pamixer` or `pactl` commands installed.",
   "weather-icons": "Weather icons",
   "weatherbit-api-key": "Weatherbit API key",
   "widget-css-name": "Widget CSS name",
@@ -257,4 +257,4 @@
   "workspaces-to-show": "Workspaces to show",
   "workspaces-to-show-tooltip": "Space-separated numbers of workspaces to show.",
   "workspaces-tooltip": "Space-separated numbers of workspaces \nyou defined in sway config. We'll build the \ncontext menu out of them."
-}
\ No newline at end of file
+}
diff --git a/nwg_panel/langs/pl_PL.json b/nwg_panel/langs/pl_PL.json
index 1569020..1dea674 100644
--- a/nwg_panel/langs/pl_PL.json
+++ b/nwg_panel/langs/pl_PL.json
@@ -238,7 +238,7 @@
   "vertical-window-margin": "Pionowy margines okna",
   "visibility": "Widoczność",
   "volume": "Głośność",
-  "volume-tooltip": "Zależy od pakietu `pamixer`.",
+  "volume-tooltip": "Wymaga zainstalowanego polecenia `pamixer` lub `pactl`.",
   "weather-icons": "Ikonki pogody",
   "weatherbit-api-key": "Klucz API Weatherbit",
   "widget-css-name": "Nazwa CSS widżetu",
@@ -257,4 +257,4 @@
   "workspaces-to-show": "Obszary do wyświetlania",
   "workspaces-to-show-tooltip": "Numery obszarów roboczych do wyświetlania, oddzielone spacjami.",
   "workspaces-tooltip": "Numery używanych obszarów roboczych, oddzielone spacjami.\nNa ich podstawie budujemy menu obszarów roboczych."
-}
\ No newline at end of file
+}
diff --git a/nwg_panel/modules/controls.py b/nwg_panel/modules/controls.py
index 8ed5ec1..1e0afbf 100644
--- a/nwg_panel/modules/controls.py
+++ b/nwg_panel/modules/controls.py
@@ -147,7 +147,7 @@ class Controls(Gtk.EventBox):
             except Exception as e:
                 print(e)
 
-        if "volume" in self.settings["components"] and commands["pamixer"]:
+        if "volume" in self.settings["components"] and (commands["pamixer"] or commands["pactl"]):
             try:
                 GLib.idle_add(self.update_volume)
             except Exception as e:
@@ -313,7 +313,7 @@ class PopupWindow(Gtk.Window):
 
         check_key(settings, "output-switcher", False)
         self.sinks = []
-        if commands["pamixer"] and settings["output-switcher"] and commands["pamixer"]:
+        if (commands["pamixer"] or commands["pactl"]) and settings["output-switcher"]:
             self.sinks = list_sinks()
 
         eb = Gtk.EventBox()
@@ -406,7 +406,7 @@ class PopupWindow(Gtk.Window):
             inner_hbox.pack_start(self.bri_scale, True, True, 5)
             add_sep = True
 
-        if "volume" in settings["components"] and commands["pamixer"]:
+        if "volume" in settings["components"] and (commands["pamixer"] or commands["pactl"]):
             inner_hbox = Gtk.Box(orientation=Gtk.Orientation.HORIZONTAL, spacing=0)
             v_box.pack_start(inner_hbox, False, False, 6)
 
@@ -429,7 +429,7 @@ class PopupWindow(Gtk.Window):
             self.vol_scale_handler = self.vol_scale.connect("value-changed", self.set_vol)
 
             inner_hbox.pack_start(self.vol_scale, True, True, 5)
-            if commands["pamixer"] and settings["output-switcher"]:
+            if (commands["pamixer"] or commands["pactl"]) and settings["output-switcher"]:
                 pactl_eb = Gtk.EventBox()
                 image = Gtk.Image()
                 pactl_eb.add(image)
@@ -662,7 +662,7 @@ class PopupWindow(Gtk.Window):
             self.menu_box.show_all()
 
     def refresh_sinks(self, *args):
-        if commands["pamixer"]:
+        if commands["pamixer"] or commands["pactl"]:
             self.sinks = list_sinks()
 
     def toggle_mute(self, e, slider):
@@ -722,7 +722,7 @@ class PopupWindow(Gtk.Window):
 
                 self.bat_label.set_text("{}% {}".format(self.parent.bat_value, self.parent.bat_time))
 
-            if "volume" in self.settings["components"] and commands["pamixer"]:
+            if "volume" in self.settings["components"] and (commands["pamixer"] or commands["pactl"]):
                 self.vol_scale.set_value(self.parent.vol_value)
                 if self.parent.vol_icon_name != self.vol_icon_name:
                     update_image(self.vol_image, self.parent.vol_icon_name, self.icon_size, self.icons_path)
@@ -738,7 +738,7 @@ class PopupWindow(Gtk.Window):
                     self.bri_icon_name = self.parent.bri_icon_name
 
         else:
-            if "volume" in self.settings["components"] and commands["pamixer"]:
+            if "volume" in self.settings["components"] and (commands["pamixer"] or commands["pactl"]):
                 with self.vol_scale.handler_block(self.vol_scale_handler):
                     self.vol_scale.set_value(self.parent.vol_value)
 
@@ -809,7 +809,7 @@ class SinkBox(Gtk.Box):
     def refresh(self):
         for item in self.get_children():
             item.destroy()
-        if commands["pamixer"]:
+        if commands["pamixer"] or commands["pactl"]:
             self.sinks = list_sinks()
             for sink in self.sinks:
                 eb = Gtk.EventBox()
diff --git a/nwg_panel/tools.py b/nwg_panel/tools.py
index 0ac8243..ade432b 100644
--- a/nwg_panel/tools.py
+++ b/nwg_panel/tools.py
@@ -8,6 +8,7 @@ import stat
 import time
 import socket
 import threading
+import re
 
 import gi
 
@@ -364,8 +365,10 @@ def check_key(dictionary, key, default_value):
 
 
 def cmd2string(cmd):
+    process_env = dict(os.environ)
+    process_env.update({"LANG": "C.UTF-8"})
     try:
-        return subprocess.check_output(cmd, shell=True).decode("utf-8").strip()
+        return subprocess.check_output(cmd, shell=True, env=process_env).decode("utf-8").strip()
     except subprocess.CalledProcessError:
         return ""
 
@@ -379,7 +382,9 @@ def is_command(cmd):
             return True
 
     except subprocess.CalledProcessError:
-        return False
+        pass
+
+    return False
 
 
 def check_commands():
@@ -432,8 +437,23 @@ def get_volume():
         except subprocess.CalledProcessError:
             # the command above returns the 'disabled` status w/ CalledProcessError, exit status 1
             pass
+    elif nwg_panel.common.commands["pactl"]:
+        try:
+            output = cmd2string("pactl get-sink-volume 0")
+            volumes = re.findall(r"/\s+(?P<volume>\d+)%\s+/", output)
+            if volumes:
+                volumes = [ int(x) for x in volumes ]
+                vol = volumes[0]
+        except Exception as e:
+            eprint(e)
+
+        try:
+            output = cmd2string("pactl get-sink-mute 0").strip().lower()
+            muted = output.endswith("yes")
+        except Exception as e:
+            eprint(e)
     else:
-        eprint("Couldn't get volume, 'pamixer' not found")
+        eprint("Couldn't get volume, no 'pamixer' or 'pactl' found")
 
     return vol, muted
 
@@ -452,8 +472,29 @@ def list_sinks():
                     sinks.append({"name": name, "desc": desc})
         except Exception as e:
             eprint(e)
+    if nwg_panel.common.commands["pactl"]:
+        try:
+            output = cmd2string("pactl list sinks")
+            if output:
+                lines = output.splitlines()
+                sink = {}
+                for line in lines:
+                    indent = line.count("\t")
+                    line = line.lstrip("\t")
+                    if indent == 0 and sink:
+                        sinks.append(sink)
+                        sink = {}
+                    elif indent == 1:
+                        if line.lower().startswith("name"):
+                            sink.update({"name": line.split(": ")[1]})
+                        elif line.lower().startswith("description"):
+                            sink.update({"desc": line.split(": ")[1]})
+                if sink:
+                    sinks.append(sink)
+        except Exception as e:
+            eprint(e)
     else:
-        eprint("Couldn't list sinks, 'pamixer' not found")
+        eprint("Couldn't list sinks, no 'pamixer' or 'pactl' found")
 
     return sinks
 
@@ -465,15 +506,19 @@ def toggle_mute(*args):
             subprocess.call("pamixer -u".split())
         else:
             subprocess.call("pamixer -m".split())
+    elif nwg_panel.common.commands["pactl"]:
+        subprocess.call("pactl set-sink-mute 0 toggle".split())
     else:
-        eprint("Couldn't toggle mute, 'pamixer' not found")
+        eprint("Couldn't toggle mute, no 'pamixer' or 'pactl' found")
 
 
 def set_volume(percent):
     if nwg_panel.common.commands["pamixer"]:
         subprocess.call("pamixer --set-volume {}".format(percent).split())
+    elif nwg_panel.common.commands["pactl"]:
+        subprocess.call("pactl set-sink-volume 0 {}%".format(percent).split())
     else:
-        eprint("Couldn't set volume, 'pamixer' not found")
+        eprint("Couldn't set volume, no 'pamixer' or 'pactl' found")
 
 
 def get_brightness(device="", controller=""):
